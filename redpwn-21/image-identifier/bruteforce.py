from pwn import *

table = """0x7707309600000000

0x990951baee0e612c

0x706af48f076dc419

0x9e6495a3e963a535

0x79dcb8a40edb8832

0x97d2d988e0d5e91e

0x7eb17cbd09b64c2b

0x90bf1d91e7b82d07

0x6ab020f21db71064

0x84be41def3b97148

0x6ddde4eb1adad47d

0x83d385c7f4d4b551

0x646ba8c0136c9856

0x8a65c9ecfd62f97a

0x63066cd914015c4f

0x8d080df5fa0f3d63

0x4c69105e3b6e20c8

0xa2677172d56041e4

0x4b04d4473c03e4d1

0xa50ab56bd20d85fd

0x42b2986c35b5a8fa

0xacbcf940dbbbc9d6

0x45df5c7532d86ce3

0xabd13d59dcd60dcf

0x51de003a26d930ac

0xbfd06116c8d75180

0x56b3c42321b4f4b5

0xb8bda50fcfba9599

0x5f0588082802b89e

0xb10be924c60cd9b2

0x58684c112f6f7c87

0xb6662d3dc1611dab

0x01db710676dc4190

0xefd5102a98d220bc

0x06b6b51f71b18589

0xe8b8d4339fbfe4a5

0x0f00f9347807c9a2

0xe10e98189609a88e

0x086d3d2d7f6a0dbb

0xe6635c0191646c97

0x1c6c61626b6b51f4

0xf262004e856530d8

0x1b01a57b6c0695ed

0xf50fc4578208f4c1

0x12b7e95065b0d9c6

0xfcb9887c8bbeb8ea

0x15da2d4962dd1ddf

0xfbd44c658cd37cf3

0x3ab551ce4db26158

0xd4bb30e2a3bc0074

0x3dd895d74adfa541

0xd3d6f4fba4d1c46d

0x346ed9fc4369e96a

0xda60b8d0ad678846

0x33031de544042d73

0xdd0d7cc9aa0a4c5f

0x270241aa5005713c

0xc90c2086be0b1010

0x206f85b35768b525

0xce61e49fb966d409

0x29d9c9985edef90e

0xc7d7a8b4b0d09822

0x2eb40d8159b33d17

0xc0ba6cadb7bd5c3b

0x9abfb3b6edb88320

0x74b1d29a03b6e20c

0x9dd277afead54739

0x73dc168304db2615

0x94643b84e3630b12

0x7a6a5aa80d6d6a3e

0x9309ff9de40ecf0b

0x7d079eb10a00ae27

0x8708a3d2f00f9344

0x6906c2fe1e01f268

0x806567cbf762575d

0x6e6b06e7196c3671

0x89d32be0fed41b76

0x67dd4acc10da7a5a

0x8ebeeff9f9b9df6f

0x60b08ed517b7be43

0xa1d1937ed6d6a3e8

0x4fdff25238d8c2c4

0xa6bc5767d1bb67f1

0x48b2364b3fb506dd

0xaf0a1b4cd80d2bda

0x41047a6036034af6

0xa867df55df60efc3

0x4669be79316e8eef

0xbc66831acb61b38c

0x5268e236256fd2a0

0xbb0b4703cc0c7795

0x5505262f220216b9

0xb2bd0b28c5ba3bbe

0x5cb36a042bb45a92

0xb5d0cf31c2d7ffa7

0x5bdeae1d2cd99e8b

0xec63f2269b64c2b0

0x026d930a756aa39c

0xeb0e363f9c0906a9

0x0500571372076785

0xe2b87a1495bf4a82

0x0cb61b387bb12bae

0xe5d5be0d92d28e9b

0x0bdbdf217cdcefb7

0xf1d4e24286d3d2d4

0x1fda836e68ddb3f8

0xf6b9265b81be16cd

0x18b747776fb077e1

0xff0f6a7088085ae6

0x11010b5c66063bca

0xf862ae698f659eff

0x166ccf45616bffd3

0xd70dd2eea00ae278

0x3903b3c24e048354

0xd06016f7a7672661

0x3e6e77db4969474d

0xd9d65adcaed16a4a

0x37d83bf040df0b66

0xdebb9ec5a9bcae53

0x30b5ffe947b2cf7f

0xcabac28abdbdf21c

0x24b4a3a653b39330

0xcdd70693bad03605

0x23d967bf54de5729

0xc4614ab8b3667a2e

0x2a6f2b945d681b02

0xc30c8ea1b40bbe37

0x2d02ef8d5a05df1b"""

table = table.split("\n\n")

print(table)

size = 0x2B

table_raw = b""

for i in table:
    table_raw += p64(int(i, 16))

print(table_raw)



for n in range(0xffffffff):
    
    print("Testing ", hex(n))

    crc_word = 0
    z = 0xffffffff
    a = 0
    b = 0
    c = 0
    d = 0

    for i in range(size):
        
        data  = p32(n) + p32(0xfffffff5) + p64(0xffffffffffffffff)
        data += p64(0xffffffffdeffffff) + p64(0xffffbfec28ffffff)
        data += p64(0xffffbfeb15ffffff) + p64(0x0000401693ffffff)

        index = ((data[i] ^ z) & 0xff)*4
        a = p8(table_raw[index])
        b = p8(table_raw[index+1])
        c = p8(table_raw[index+2])
        d = p8(table_raw[index+3])
        
        crc_word = u32(a + b + c + d)
        
        z = crc_word ^ z >> 0x8

    if(((~z) & 0xffff) == 0x1814):
        print("Done!")
        print("n = ", n)
        break
        exit(0)


#print("DONE")
#print("~Z = ", hex(~z & 0xffffffff))
